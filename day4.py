# -*- coding: utf-8 -*-
"""day4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13CxVKgmvd6YkFQAaptxdwuQWpJp-33FN

Question 1
"""

class Node:
  def __init__(self,data):
    self.data=data
    self.next=None 
class linkedList:
  def __init__(self):
    self.head=None 
  def insertBeg(self,ndata):
      nnode=Node(ndata)
      nnode.next=self.head
      self.head=nnode 
  def deleteEnd(self):
    temp=self.head
    while temp.next is not None:
      prev=temp
      temp=temp.next
    if(temp==None):
      return 
    prev.next=None
    temp=None 
  def printList(self):
    temp=self.head
    while temp:
      print(temp.data,end=" ")
      temp=temp.next 
l=linkedList()
n=int(input("Enter size"))
for i in range(n):
  a=int(input("Enter value to be inserted"))
  l.insertBeg(a)
print("Linked List")
l.printList()
k=int(input())
for i in range(k):
  l.deleteEnd()
print("List")
l.printList()

"""Question 2"""

def binarySearch(l,a,b,k):
  while a<=b:
    mid=(a+b)//2 
    if l[mid]==k:
      return mid 
    elif l[mid]<k:
      a=mid+1
    else:
      b=mid-1 
  return -1
l=list(map(int,input("Enter List").split()))
k=int(input("Enter the value to be searched"))
r=binarySearch(l,0,len(l)-1,k)
if r!=-1:
  print("Index of the element found is",r)
else:
  print("Element is not found")

"""Question 3"""

class Node:
  def __init__(self,data):
    self.data=data
    self.next=None
class LinkedList:
  def __init__(self):
    self.head=None
  def insert(self,ndata):
    nnode=Node(ndata)
    nnode.next=self.head
    self.head=nnode 
  def printList(self):
    temp=self.head
    while temp:
      print(temp.data,end=" ")
      temp=temp.next 
  def printMiddle(self):
    sp=self.head
    fp=self.head
    if self.head is not None:
      while fp is not None and fp.next is not None:
        fp=fp.next.next 
        sp=sp.next 
      print("Middle Element is",sp.data)
l=LinkedList()
n=int(input("Enter size"))
for i in range(n):
    a=int(input("Enter value to be inserted"))
    l.insert(a)
print("Linked list")
l.printList()
print("\NMiddle element of linked list")
l.printMiddle()